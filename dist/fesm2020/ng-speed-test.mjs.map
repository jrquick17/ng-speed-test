{"version":3,"file":"ng-speed-test.mjs","sources":["../../src/app/models/speed-test-file.model.ts","../../src/app/models/speed-test-results.model.ts","../../src/app/models/speed-test-settings.model.ts","../../src/app/services/speed-test.service.ts","../../src/app/speed-test.module.ts","../../src/ng-speed-test.ts"],"sourcesContent":["export class SpeedTestFileModel {\r\n  public path:string = 'https://raw.githubusercontent.com/jrquick17/ng-speed-test/02c59e4afde67c35a5ba74014b91d44b33c0b3fe/demo/src/assets/5mb.jpg';\r\n  public shouldBustCache:boolean = true;\r\n  public size:number = 4952221;\r\n\r\n  // https://raw.githubusercontent.com/jrquick17/ng-speed-test/02c59e4afde67c35a5ba74014b91d44b33c0b3fe/demo/src/assets/500kb.jpg\r\n    // 500kb      // 408949 kb\r\n  // https://raw.githubusercontent.com/jrquick17/ng-speed-test/02c59e4afde67c35a5ba74014b91d44b33c0b3fe/demo/src/assets/1mb.jpg\r\n    // 1mb        // 1197292 kb\r\n  // https://raw.githubusercontent.com/jrquick17/ng-speed-test/02c59e4afde67c35a5ba74014b91d44b33c0b3fe/demo/src/assets/5mb.jpg\r\n    // 5mb        // 4952221 kb\r\n  // https://raw.githubusercontent.com/jrquick17/ng-speed-test/02c59e4afde67c35a5ba74014b91d44b33c0b3fe/demo/src/assets/13mb.jpg\r\n    // 13mb       // 13848150 kb\r\n\r\n  constructor() {\r\n\r\n  }\r\n}\r\n","export class SpeedTestResultsModel {\r\n  public duration:number  = 0;\r\n  public hasEnded:boolean = false;\r\n\r\n  public startTime:number = null;\r\n  public endTime:number = null;\r\n\r\n  public speedBps:number = 0;\r\n\r\n  constructor(\r\n    private fileSize:number\r\n  ) {\r\n\r\n  }\r\n\r\n  private _update():void {\r\n    if (this.endTime !== null) {\r\n      const milliseconds = this.endTime - this.startTime;\r\n      if (milliseconds !== 0) {\r\n        this.duration = milliseconds / 1000;\r\n      }\r\n\r\n      const bitsLoaded = this.fileSize * 8;\r\n\r\n      this.speedBps = bitsLoaded / this.duration;\r\n    }\r\n  }\r\n\r\n  end():void {\r\n    if (!this.hasEnded) {\r\n      this.hasEnded = true;\r\n\r\n      this.endTime = (new Date()).getTime();\r\n\r\n      this._update();\r\n    }\r\n  }\r\n\r\n  error():void {\r\n    if (!this.hasEnded) {\r\n      this.hasEnded = true;\r\n\r\n      this.endTime = null;\r\n\r\n      this._update();\r\n    }\r\n  }\r\n\r\n  start():void {\r\n    this.startTime = (new Date()).getTime();\r\n  }\r\n}\r\n","import {SpeedTestFileModel} from './speed-test-file.model';\r\n\r\nexport class SpeedTestSettingsModel {\r\n  public iterations?:number = 3;\r\n  public file?:SpeedTestFileModel = new SpeedTestFileModel();\r\n  public retryDelay?:number = 500;\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nimport {fromEvent, merge, Observable, Observer, of} from 'rxjs';\r\nimport {map, mergeMap} from 'rxjs/operators';\r\n\r\nimport {SpeedTestFileModel} from '../models/speed-test-file.model';\r\nimport {SpeedTestResultsModel} from '../models/speed-test-results.model';\r\nimport {SpeedTestSettingsModel} from '../models/speed-test-settings.model';\r\n\r\n@Injectable()\r\nexport class SpeedTestService {\r\n  constructor() {\r\n\r\n  }\r\n\r\n  private _applyCacheBuster = (path:string): string => path + '?nnn=' + Math.random();\r\n\r\n  private _download(settings:SpeedTestSettingsModel, allDetails?:SpeedTestResultsModel[]):Observable<number> {\r\n    return new Observable<SpeedTestResultsModel>(\r\n      (observer) => {\r\n        const newSpeedDetails = new SpeedTestResultsModel(settings.file.size);\r\n\r\n        const download = new Image();\r\n\r\n        download.onload = () => {\r\n          newSpeedDetails.end();\r\n\r\n          observer.next(newSpeedDetails);\r\n          observer.complete();\r\n        };\r\n\r\n        download.onerror = () => {\r\n          newSpeedDetails.error();\r\n\r\n          let delay = 0;\r\n          if (settings.iterations !== 1) {\r\n            delay = settings.retryDelay;\r\n          }\r\n\r\n          window.setTimeout(\r\n            () => {\r\n              observer.next(newSpeedDetails);\r\n              observer.complete();\r\n            },\r\n            delay\r\n          );\r\n        };\r\n\r\n        let filePath = settings.file.path;\r\n        if (settings.file.shouldBustCache) {\r\n          filePath = this._applyCacheBuster(filePath);\r\n        }\r\n\r\n        newSpeedDetails.start();\r\n\r\n        download.src = filePath;\r\n      }\r\n    ).pipe(\r\n      mergeMap(\r\n        (newSpeedDetails:SpeedTestResultsModel|null) => {\r\n          if (typeof allDetails === 'undefined') {\r\n            allDetails = [];\r\n          }\r\n\r\n          allDetails.push(newSpeedDetails);\r\n\r\n          if (settings.iterations === 1) {\r\n            const count = allDetails.length;\r\n            let total = 0;\r\n\r\n            for (let i = 0; i < count; i++) {\r\n              total += allDetails[i].speedBps;\r\n            }\r\n\r\n            const speedBps = total / count;\r\n\r\n            return of(speedBps);\r\n          } else {\r\n            settings.iterations--;\r\n\r\n            return this._download(settings, allDetails);\r\n          }\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  getBps(settings?:SpeedTestSettingsModel):Observable<number|null> {\r\n    return new Observable(\r\n      (observer) => {\r\n        window.setTimeout(\r\n          () => {\r\n            const defaultSettings = new SpeedTestSettingsModel();\r\n            if (typeof settings === 'undefined') {\r\n              settings = { ...defaultSettings };\r\n            } else {\r\n              if (typeof settings.iterations === 'undefined') {\r\n                settings.iterations = defaultSettings.iterations;\r\n              }\r\n\r\n              if (typeof settings.file === 'undefined') {\r\n                settings.file = defaultSettings.file;\r\n              } else {\r\n                const defaultFileSettings = new SpeedTestFileModel();\r\n\r\n                if (typeof settings.file.path === 'undefined') {\r\n                  console.error('ng-speed-test: File path is missing.');\r\n\r\n                  return null;\r\n                }\r\n\r\n                if (typeof settings.file.size === 'undefined') {\r\n                  console.error('ng-speed-test: File size is missing.');\r\n\r\n                  return null;\r\n                }\r\n\r\n                if (typeof settings.file.shouldBustCache === 'undefined') {\r\n                  settings.file.shouldBustCache = defaultFileSettings.shouldBustCache;\r\n                }\r\n\r\n                if (typeof settings.retryDelay === 'undefined') {\r\n                  settings.retryDelay = defaultSettings.retryDelay;\r\n                }\r\n              }\r\n            }\r\n\r\n            this._download({ ...settings }).subscribe(\r\n              (speedBps) => {\r\n                observer.next(speedBps);\r\n                observer.complete();\r\n              }\r\n            );\r\n          },\r\n          1\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  getKbps(settings?:SpeedTestSettingsModel):Observable<number> {\r\n    return this.getBps(settings).pipe(\r\n      map(\r\n        (bps) => {\r\n          return bps / 1024;\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  getMbps(settings?:SpeedTestSettingsModel):Observable<number> {\r\n    return this.getKbps(settings).pipe(\r\n      map(\r\n        (kpbs) => {\r\n          return kpbs / 1024;\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  isOnline():Observable<boolean> {\r\n    return merge<boolean>(\r\n      fromEvent(window, 'offline').pipe(\r\n        map(\r\n          () => false\r\n        )\r\n      ),\r\n      fromEvent(window, 'online').pipe(\r\n        map(\r\n          () => true\r\n        )\r\n      ),\r\n      new Observable(\r\n        (sub:Observer<boolean>) => {\r\n          sub.next(navigator.onLine);\r\n          sub.complete();\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\n\r\nimport {SpeedTestService} from './services/speed-test.service';\r\n\r\n@NgModule({\r\n  providers: [\r\n    SpeedTestService\r\n  ]\r\n})\r\nexport class SpeedTestModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './main';\n"],"names":[],"mappings":"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"}