{"version":3,"file":"ng-speed-test.umd.js","sources":["../../src/app/models/speed-test-file.model.ts","../../src/app/models/speed-test-results.model.ts","../../src/app/models/speed-test-settings.model.ts","../../src/app/services/speed-test.service.ts","../../src/app/speed-test.module.ts","../../src/ng-speed-test.ts"],"sourcesContent":["export class SpeedTestFileModel {\n  public path:string = 'https://raw.githubusercontent.com/jrquick17/ng-speed-test/02c59e4afde67c35a5ba74014b91d44b33c0b3fe/demo/src/assets/5mb.jpg';\n  public shouldBustCache:boolean = true;\n  public size:number = 4952221;\n\n  // 408949 // 500kb\n  // 1197292 // 1mb\n  // 4952221 // 5mb\n  // 13848150 // 15mb\n\n  constructor() {\n\n  }\n}\n","export class SpeedTestResultsModel {\n  public duration:number  = 0;\n  public hasEnded:boolean = false;\n\n  public startTime:number = null;\n  public endTime:number = null;\n\n  public speedBps:number = 0;\n\n  constructor(\n    private fileSize:number\n  ) {\n\n  }\n\n  private _update():void {\n    if (this.endTime !== null) {\n      const milliseconds = this.endTime - this.startTime;\n      if (milliseconds !== 0) {\n        this.duration = milliseconds / 1000;\n      }\n\n      const bitsLoaded = this.fileSize * 8;\n\n      this.speedBps = bitsLoaded / this.duration;\n    }\n  }\n\n  end():void {\n    if (!this.hasEnded) {\n      this.hasEnded = true;\n\n      this.endTime = (new Date()).getTime();\n\n      this._update();\n    }\n  }\n\n  error():void {\n    if (!this.hasEnded) {\n      this.hasEnded = true;\n\n      this.endTime = null;\n\n      this._update();\n    }\n  }\n\n  start():void {\n    this.startTime = (new Date()).getTime();\n  }\n}\n","import {SpeedTestFileModel} from './speed-test-file.model';\n\nexport class SpeedTestSettingsModel {\n  public iterations?:number = 3;\n  public file?:SpeedTestFileModel = new SpeedTestFileModel();\n  public retryDelay?:number = 500;\n}\n","import {Injectable} from '@angular/core';\n\nimport {fromEvent, merge, Observable, Observer, of} from 'rxjs';\nimport {mergeMap, map} from 'rxjs/operators';\n\nimport {SpeedTestFileModel} from '../models/speed-test-file.model';\nimport {SpeedTestResultsModel} from '../models/speed-test-results.model';\nimport {SpeedTestSettingsModel} from '../models/speed-test-settings.model';\nimport {deepCopy} from '@angular-devkit/core';\n\n@Injectable()\nexport class SpeedTestService {\n  constructor() {\n\n  }\n\n  private _applyCacheBuster = (path:string): string => path + '?nnn=' + Math.random();\n\n  private _download(settings:SpeedTestSettingsModel, allDetails?:SpeedTestResultsModel[]):Observable<number> {\n    return new Observable<SpeedTestResultsModel>(\n      (observer) => {\n        const newSpeedDetails = new SpeedTestResultsModel(settings.file.size);\n\n        const download = new Image();\n\n        download.onload = () => {\n          newSpeedDetails.end();\n\n          observer.next(newSpeedDetails);\n          observer.complete();\n        };\n\n        download.onerror = () => {\n          newSpeedDetails.error();\n\n          let delay = 0;\n          if (settings.iterations !== 1) {\n            delay = settings.retryDelay;\n          }\n\n          window.setTimeout(\n            () => {\n              observer.next(newSpeedDetails);\n              observer.complete();\n            },\n            delay\n          );\n        };\n\n        let filePath = settings.file.path;\n        if (settings.file.shouldBustCache) {\n          filePath = this._applyCacheBuster(filePath);\n        }\n\n        newSpeedDetails.start();\n\n        download.src = filePath;\n      }\n    ).pipe(\n      mergeMap(\n        (newSpeedDetails:SpeedTestResultsModel|null) => {\n          if (typeof allDetails === 'undefined') {\n            allDetails = [];\n          }\n\n          allDetails.push(newSpeedDetails);\n\n          if (settings.iterations === 1) {\n            const count = allDetails.length;\n            let total = 0;\n\n            for (let i = 0; i < count; i++) {\n              total += allDetails[i].speedBps;\n            }\n\n            const speedBps = total / count;\n\n            return of(speedBps);\n          } else {\n            settings.iterations--;\n\n            return this._download(settings, allDetails);\n          }\n        }\n      )\n    );\n  }\n\n  getBps(settings:SpeedTestSettingsModel):Observable<number|null> {\n    return new Observable(\n      (observer) => {\n        window.setTimeout(\n          () => {\n            const defaultSettings = new SpeedTestSettingsModel();\n\n            if (typeof settings.iterations === 'undefined') {\n              settings.iterations = defaultSettings.iterations;\n            }\n\n            if (typeof settings.file === 'undefined') {\n              settings.file = defaultSettings.file;\n            } else {\n              const defaultFileSettings = new SpeedTestFileModel();\n\n              if (typeof settings.file.path === 'undefined') {\n                console.error('ng-speed-test: File path is missing.');\n\n                return null;\n              }\n\n              if (typeof settings.file.size === 'undefined') {\n                console.error('ng-speed-test: File size is missing.');\n\n                return null;\n              }\n\n              if (typeof settings.file.shouldBustCache === 'undefined') {\n                settings.file.shouldBustCache = defaultFileSettings.shouldBustCache;\n              }\n\n              if (typeof settings.retryDelay === 'undefined') {\n                settings.retryDelay = defaultSettings.retryDelay;\n              }\n            }\n\n            this._download(deepCopy(settings)).subscribe(\n              (speedBps) => {\n                observer.next(speedBps);\n                observer.complete();\n              }\n            );\n          },\n          1\n        );\n      }\n    );\n  }\n\n  getKbps(settings:SpeedTestSettingsModel):Observable<number> {\n    return this.getBps(settings).pipe(\n      map(\n        (bps) => {\n          return bps / 1024;\n        }\n      )\n    );\n  }\n\n  getMbps(settings:SpeedTestSettingsModel):Observable<number> {\n    return this.getKbps(settings).pipe(\n      map(\n        (kpbs) => {\n          return kpbs / 1024;\n        }\n      )\n    );\n  }\n\n  isOnline():Observable<boolean> {\n    return merge<boolean>(\n      fromEvent(window, 'offline').pipe(\n        map(\n          () => false\n        )\n      ),\n      fromEvent(window, 'online').pipe(\n        map(\n          () => true\n        )\n      ),\n      new Observable(\n        (sub:Observer<boolean>) => {\n          sub.next(navigator.onLine);\n          sub.complete();\n        }\n      )\n    );\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {SpeedTestService} from './services/speed-test.service';\n\n@NgModule({\n  providers: [\n    SpeedTestService\n  ]\n})\nexport class SpeedTestModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './main';\n"],"names":["Observable","mergeMap","of","deepCopy","map","merge","fromEvent","Injectable","NgModule"],"mappings":"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"}