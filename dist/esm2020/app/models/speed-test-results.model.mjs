export class SpeedTestResultsModel {
    constructor(fileSize) {
        this.fileSize = fileSize;
        this.duration = 0;
        this.hasEnded = false;
        this.startTime = null;
        this.endTime = null;
        this.speedBps = 0;
    }
    _update() {
        if (this.endTime !== null) {
            const milliseconds = this.endTime - this.startTime;
            if (milliseconds !== 0) {
                this.duration = milliseconds / 1000;
            }
            const bitsLoaded = this.fileSize * 8;
            this.speedBps = bitsLoaded / this.duration;
        }
    }
    end() {
        if (!this.hasEnded) {
            this.hasEnded = true;
            this.endTime = (new Date()).getTime();
            this._update();
        }
    }
    error() {
        if (!this.hasEnded) {
            this.hasEnded = true;
            this.endTime = null;
            this._update();
        }
    }
    start() {
        this.startTime = (new Date()).getTime();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BlZWQtdGVzdC1yZXN1bHRzLm1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2FwcC9tb2RlbHMvc3BlZWQtdGVzdC1yZXN1bHRzLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sT0FBTyxxQkFBcUI7SUFTaEMsWUFDVSxRQUFlO1FBQWYsYUFBUSxHQUFSLFFBQVEsQ0FBTztRQVRsQixhQUFRLEdBQVcsQ0FBQyxDQUFDO1FBQ3JCLGFBQVEsR0FBVyxLQUFLLENBQUM7UUFFekIsY0FBUyxHQUFVLElBQUksQ0FBQztRQUN4QixZQUFPLEdBQVUsSUFBSSxDQUFDO1FBRXRCLGFBQVEsR0FBVSxDQUFDLENBQUM7SUFNM0IsQ0FBQztJQUVPLE9BQU87UUFDYixJQUFJLElBQUksQ0FBQyxPQUFPLEtBQUssSUFBSSxFQUFFO1lBQ3pCLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUNuRCxJQUFJLFlBQVksS0FBSyxDQUFDLEVBQUU7Z0JBQ3RCLElBQUksQ0FBQyxRQUFRLEdBQUcsWUFBWSxHQUFHLElBQUksQ0FBQzthQUNyQztZQUVELE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO1lBRXJDLElBQUksQ0FBQyxRQUFRLEdBQUcsVUFBVSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7U0FDNUM7SUFDSCxDQUFDO0lBRUQsR0FBRztRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1lBRXJCLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7WUFFdEMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBQ2hCO0lBQ0gsQ0FBQztJQUVELEtBQUs7UUFDSCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNsQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztZQUVyQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztZQUVwQixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7U0FDaEI7SUFDSCxDQUFDO0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDMUMsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFNwZWVkVGVzdFJlc3VsdHNNb2RlbCB7XHJcbiAgcHVibGljIGR1cmF0aW9uOm51bWJlciAgPSAwO1xyXG4gIHB1YmxpYyBoYXNFbmRlZDpib29sZWFuID0gZmFsc2U7XHJcblxyXG4gIHB1YmxpYyBzdGFydFRpbWU6bnVtYmVyID0gbnVsbDtcclxuICBwdWJsaWMgZW5kVGltZTpudW1iZXIgPSBudWxsO1xyXG5cclxuICBwdWJsaWMgc3BlZWRCcHM6bnVtYmVyID0gMDtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIGZpbGVTaXplOm51bWJlclxyXG4gICkge1xyXG5cclxuICB9XHJcblxyXG4gIHByaXZhdGUgX3VwZGF0ZSgpOnZvaWQge1xyXG4gICAgaWYgKHRoaXMuZW5kVGltZSAhPT0gbnVsbCkge1xyXG4gICAgICBjb25zdCBtaWxsaXNlY29uZHMgPSB0aGlzLmVuZFRpbWUgLSB0aGlzLnN0YXJ0VGltZTtcclxuICAgICAgaWYgKG1pbGxpc2Vjb25kcyAhPT0gMCkge1xyXG4gICAgICAgIHRoaXMuZHVyYXRpb24gPSBtaWxsaXNlY29uZHMgLyAxMDAwO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zdCBiaXRzTG9hZGVkID0gdGhpcy5maWxlU2l6ZSAqIDg7XHJcblxyXG4gICAgICB0aGlzLnNwZWVkQnBzID0gYml0c0xvYWRlZCAvIHRoaXMuZHVyYXRpb247XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBlbmQoKTp2b2lkIHtcclxuICAgIGlmICghdGhpcy5oYXNFbmRlZCkge1xyXG4gICAgICB0aGlzLmhhc0VuZGVkID0gdHJ1ZTtcclxuXHJcbiAgICAgIHRoaXMuZW5kVGltZSA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCk7XHJcblxyXG4gICAgICB0aGlzLl91cGRhdGUoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGVycm9yKCk6dm9pZCB7XHJcbiAgICBpZiAoIXRoaXMuaGFzRW5kZWQpIHtcclxuICAgICAgdGhpcy5oYXNFbmRlZCA9IHRydWU7XHJcblxyXG4gICAgICB0aGlzLmVuZFRpbWUgPSBudWxsO1xyXG5cclxuICAgICAgdGhpcy5fdXBkYXRlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzdGFydCgpOnZvaWQge1xyXG4gICAgdGhpcy5zdGFydFRpbWUgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpO1xyXG4gIH1cclxufVxyXG4iXX0=