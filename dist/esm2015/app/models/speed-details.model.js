export class SpeedDetailsModel {
    constructor(fileSize) {
        this.fileSize = fileSize;
        this.duration = 0;
        this.hasEnded = false;
        this.startTime = null;
        this.endTime = null;
        this.speedBps = 0;
    }
    _update() {
        if (this.endTime !== null) {
            const milliseconds = this.endTime - this.startTime;
            if (milliseconds !== 0) {
                this.duration = milliseconds / 1000;
            }
            const bitsLoaded = this.fileSize * 8;
            this.speedBps = bitsLoaded / this.duration;
        }
    }
    end() {
        if (!this.hasEnded) {
            this.hasEnded = true;
            this.endTime = (new Date()).getTime();
            this._update();
        }
    }
    error() {
        if (!this.hasEnded) {
            this.hasEnded = true;
            this.endTime = null;
            this._update();
        }
    }
    start() {
        this.startTime = (new Date()).getTime();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BlZWQtZGV0YWlscy5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvanJxdWljay9kZXZlbG9wbWVudC9lbmNvdW50aW5nL25nLXNwZWVkLXRlc3Qvc3JjLyIsInNvdXJjZXMiOlsiYXBwL21vZGVscy9zcGVlZC1kZXRhaWxzLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sT0FBTyxpQkFBaUI7SUFTNUIsWUFDVSxRQUFlO1FBQWYsYUFBUSxHQUFSLFFBQVEsQ0FBTztRQVRsQixhQUFRLEdBQVcsQ0FBQyxDQUFDO1FBQ3JCLGFBQVEsR0FBVyxLQUFLLENBQUM7UUFFekIsY0FBUyxHQUFVLElBQUksQ0FBQztRQUN4QixZQUFPLEdBQVUsSUFBSSxDQUFDO1FBRXRCLGFBQVEsR0FBVSxDQUFDLENBQUM7SUFNM0IsQ0FBQztJQUVPLE9BQU87UUFDYixJQUFJLElBQUksQ0FBQyxPQUFPLEtBQUssSUFBSSxFQUFFO1lBQ3pCLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUNuRCxJQUFJLFlBQVksS0FBSyxDQUFDLEVBQUU7Z0JBQ3RCLElBQUksQ0FBQyxRQUFRLEdBQUcsWUFBWSxHQUFHLElBQUksQ0FBQzthQUNyQztZQUVELE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO1lBRXJDLElBQUksQ0FBQyxRQUFRLEdBQUcsVUFBVSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7U0FDNUM7SUFDSCxDQUFDO0lBRUQsR0FBRztRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1lBRXJCLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7WUFFdEMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBQ2hCO0lBQ0gsQ0FBQztJQUVELEtBQUs7UUFDSCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNsQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztZQUVyQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztZQUVwQixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7U0FDaEI7SUFDSCxDQUFDO0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDMUMsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFNwZWVkRGV0YWlsc01vZGVsIHtcbiAgcHVibGljIGR1cmF0aW9uOm51bWJlciAgPSAwO1xuICBwdWJsaWMgaGFzRW5kZWQ6Ym9vbGVhbiA9IGZhbHNlO1xuXG4gIHB1YmxpYyBzdGFydFRpbWU6bnVtYmVyID0gbnVsbDtcbiAgcHVibGljIGVuZFRpbWU6bnVtYmVyID0gbnVsbDtcblxuICBwdWJsaWMgc3BlZWRCcHM6bnVtYmVyID0gMDtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGZpbGVTaXplOm51bWJlclxuICApIHtcblxuICB9XG5cbiAgcHJpdmF0ZSBfdXBkYXRlKCk6dm9pZCB7XG4gICAgaWYgKHRoaXMuZW5kVGltZSAhPT0gbnVsbCkge1xuICAgICAgY29uc3QgbWlsbGlzZWNvbmRzID0gdGhpcy5lbmRUaW1lIC0gdGhpcy5zdGFydFRpbWU7XG4gICAgICBpZiAobWlsbGlzZWNvbmRzICE9PSAwKSB7XG4gICAgICAgIHRoaXMuZHVyYXRpb24gPSBtaWxsaXNlY29uZHMgLyAxMDAwO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBiaXRzTG9hZGVkID0gdGhpcy5maWxlU2l6ZSAqIDg7XG5cbiAgICAgIHRoaXMuc3BlZWRCcHMgPSBiaXRzTG9hZGVkIC8gdGhpcy5kdXJhdGlvbjtcbiAgICB9XG4gIH1cblxuICBlbmQoKTp2b2lkIHtcbiAgICBpZiAoIXRoaXMuaGFzRW5kZWQpIHtcbiAgICAgIHRoaXMuaGFzRW5kZWQgPSB0cnVlO1xuXG4gICAgICB0aGlzLmVuZFRpbWUgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpO1xuXG4gICAgICB0aGlzLl91cGRhdGUoKTtcbiAgICB9XG4gIH1cblxuICBlcnJvcigpOnZvaWQge1xuICAgIGlmICghdGhpcy5oYXNFbmRlZCkge1xuICAgICAgdGhpcy5oYXNFbmRlZCA9IHRydWU7XG5cbiAgICAgIHRoaXMuZW5kVGltZSA9IG51bGw7XG5cbiAgICAgIHRoaXMuX3VwZGF0ZSgpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXJ0KCk6dm9pZCB7XG4gICAgdGhpcy5zdGFydFRpbWUgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpO1xuICB9XG59XG4iXX0=