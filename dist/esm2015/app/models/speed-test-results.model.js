export class SpeedTestResultsModel {
    constructor(fileSize) {
        this.fileSize = fileSize;
        this.duration = 0;
        this.hasEnded = false;
        this.startTime = null;
        this.endTime = null;
        this.speedBps = 0;
    }
    _update() {
        if (this.endTime !== null) {
            const milliseconds = this.endTime - this.startTime;
            if (milliseconds !== 0) {
                this.duration = milliseconds / 1000;
            }
            const bitsLoaded = this.fileSize * 8;
            this.speedBps = bitsLoaded / this.duration;
        }
    }
    end() {
        if (!this.hasEnded) {
            this.hasEnded = true;
            this.endTime = (new Date()).getTime();
            this._update();
        }
    }
    error() {
        if (!this.hasEnded) {
            this.hasEnded = true;
            this.endTime = null;
            this._update();
        }
    }
    start() {
        this.startTime = (new Date()).getTime();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BlZWQtdGVzdC1yZXN1bHRzLm1vZGVsLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qcnF1aWNrL2RldmVsb3BtZW50L2VuY291bnRpbmcvbmctc3BlZWQtdGVzdC9zcmMvIiwic291cmNlcyI6WyJhcHAvbW9kZWxzL3NwZWVkLXRlc3QtcmVzdWx0cy5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLE9BQU8scUJBQXFCO0lBU2hDLFlBQ1UsUUFBZTtRQUFmLGFBQVEsR0FBUixRQUFRLENBQU87UUFUbEIsYUFBUSxHQUFXLENBQUMsQ0FBQztRQUNyQixhQUFRLEdBQVcsS0FBSyxDQUFDO1FBRXpCLGNBQVMsR0FBVSxJQUFJLENBQUM7UUFDeEIsWUFBTyxHQUFVLElBQUksQ0FBQztRQUV0QixhQUFRLEdBQVUsQ0FBQyxDQUFDO0lBTTNCLENBQUM7SUFFTyxPQUFPO1FBQ2IsSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLElBQUksRUFBRTtZQUN6QixNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDbkQsSUFBSSxZQUFZLEtBQUssQ0FBQyxFQUFFO2dCQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLFlBQVksR0FBRyxJQUFJLENBQUM7YUFDckM7WUFFRCxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztZQUVyQyxJQUFJLENBQUMsUUFBUSxHQUFHLFVBQVUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1NBQzVDO0lBQ0gsQ0FBQztJQUVELEdBQUc7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNsQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztZQUVyQixJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBRXRDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUNoQjtJQUNILENBQUM7SUFFRCxLQUFLO1FBQ0gsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDbEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7WUFFckIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7WUFFcEIsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBQ2hCO0lBQ0gsQ0FBQztJQUVELEtBQUs7UUFDSCxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQzFDLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBTcGVlZFRlc3RSZXN1bHRzTW9kZWwge1xuICBwdWJsaWMgZHVyYXRpb246bnVtYmVyICA9IDA7XG4gIHB1YmxpYyBoYXNFbmRlZDpib29sZWFuID0gZmFsc2U7XG5cbiAgcHVibGljIHN0YXJ0VGltZTpudW1iZXIgPSBudWxsO1xuICBwdWJsaWMgZW5kVGltZTpudW1iZXIgPSBudWxsO1xuXG4gIHB1YmxpYyBzcGVlZEJwczpudW1iZXIgPSAwO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgZmlsZVNpemU6bnVtYmVyXG4gICkge1xuXG4gIH1cblxuICBwcml2YXRlIF91cGRhdGUoKTp2b2lkIHtcbiAgICBpZiAodGhpcy5lbmRUaW1lICE9PSBudWxsKSB7XG4gICAgICBjb25zdCBtaWxsaXNlY29uZHMgPSB0aGlzLmVuZFRpbWUgLSB0aGlzLnN0YXJ0VGltZTtcbiAgICAgIGlmIChtaWxsaXNlY29uZHMgIT09IDApIHtcbiAgICAgICAgdGhpcy5kdXJhdGlvbiA9IG1pbGxpc2Vjb25kcyAvIDEwMDA7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGJpdHNMb2FkZWQgPSB0aGlzLmZpbGVTaXplICogODtcblxuICAgICAgdGhpcy5zcGVlZEJwcyA9IGJpdHNMb2FkZWQgLyB0aGlzLmR1cmF0aW9uO1xuICAgIH1cbiAgfVxuXG4gIGVuZCgpOnZvaWQge1xuICAgIGlmICghdGhpcy5oYXNFbmRlZCkge1xuICAgICAgdGhpcy5oYXNFbmRlZCA9IHRydWU7XG5cbiAgICAgIHRoaXMuZW5kVGltZSA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCk7XG5cbiAgICAgIHRoaXMuX3VwZGF0ZSgpO1xuICAgIH1cbiAgfVxuXG4gIGVycm9yKCk6dm9pZCB7XG4gICAgaWYgKCF0aGlzLmhhc0VuZGVkKSB7XG4gICAgICB0aGlzLmhhc0VuZGVkID0gdHJ1ZTtcblxuICAgICAgdGhpcy5lbmRUaW1lID0gbnVsbDtcblxuICAgICAgdGhpcy5fdXBkYXRlKCk7XG4gICAgfVxuICB9XG5cbiAgc3RhcnQoKTp2b2lkIHtcbiAgICB0aGlzLnN0YXJ0VGltZSA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCk7XG4gIH1cbn1cbiJdfQ==