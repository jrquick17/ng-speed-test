export class SpeedTestResultsModel {
    fileSize;
    duration = 0;
    hasEnded = false;
    startTime = null;
    endTime = null;
    speedBps = 0;
    constructor(fileSize) {
        this.fileSize = fileSize;
    }
    _update() {
        if (this.endTime !== null) {
            const milliseconds = this.endTime - this.startTime;
            if (milliseconds !== 0) {
                this.duration = milliseconds / 1000;
            }
            const bitsLoaded = this.fileSize * 8;
            this.speedBps = bitsLoaded / this.duration;
        }
    }
    end() {
        if (!this.hasEnded) {
            this.hasEnded = true;
            this.endTime = (new Date()).getTime();
            this._update();
        }
    }
    error() {
        if (!this.hasEnded) {
            this.hasEnded = true;
            this.endTime = null;
            this._update();
        }
    }
    start() {
        this.startTime = (new Date()).getTime();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BlZWQtdGVzdC1yZXN1bHRzLm1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2FwcC9tb2RlbHMvc3BlZWQtdGVzdC1yZXN1bHRzLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sT0FBTyxxQkFBcUI7SUFVdEI7SUFUSCxRQUFRLEdBQVcsQ0FBQyxDQUFDO0lBQ3JCLFFBQVEsR0FBVyxLQUFLLENBQUM7SUFFekIsU0FBUyxHQUFVLElBQUksQ0FBQztJQUN4QixPQUFPLEdBQVUsSUFBSSxDQUFDO0lBRXRCLFFBQVEsR0FBVSxDQUFDLENBQUM7SUFFM0IsWUFDVSxRQUFlO1FBQWYsYUFBUSxHQUFSLFFBQVEsQ0FBTztJQUd6QixDQUFDO0lBRU8sT0FBTztRQUNiLElBQUksSUFBSSxDQUFDLE9BQU8sS0FBSyxJQUFJLEVBQUU7WUFDekIsTUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1lBQ25ELElBQUksWUFBWSxLQUFLLENBQUMsRUFBRTtnQkFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxZQUFZLEdBQUcsSUFBSSxDQUFDO2FBQ3JDO1lBRUQsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7WUFFckMsSUFBSSxDQUFDLFFBQVEsR0FBRyxVQUFVLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztTQUM1QztJQUNILENBQUM7SUFFRCxHQUFHO1FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDbEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7WUFFckIsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUV0QyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7U0FDaEI7SUFDSCxDQUFDO0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1lBRXJCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1lBRXBCLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUNoQjtJQUNILENBQUM7SUFFRCxLQUFLO1FBQ0gsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUMxQyxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgU3BlZWRUZXN0UmVzdWx0c01vZGVsIHtcclxuICBwdWJsaWMgZHVyYXRpb246bnVtYmVyICA9IDA7XHJcbiAgcHVibGljIGhhc0VuZGVkOmJvb2xlYW4gPSBmYWxzZTtcclxuXHJcbiAgcHVibGljIHN0YXJ0VGltZTpudW1iZXIgPSBudWxsO1xyXG4gIHB1YmxpYyBlbmRUaW1lOm51bWJlciA9IG51bGw7XHJcblxyXG4gIHB1YmxpYyBzcGVlZEJwczpudW1iZXIgPSAwO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgZmlsZVNpemU6bnVtYmVyXHJcbiAgKSB7XHJcblxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfdXBkYXRlKCk6dm9pZCB7XHJcbiAgICBpZiAodGhpcy5lbmRUaW1lICE9PSBudWxsKSB7XHJcbiAgICAgIGNvbnN0IG1pbGxpc2Vjb25kcyA9IHRoaXMuZW5kVGltZSAtIHRoaXMuc3RhcnRUaW1lO1xyXG4gICAgICBpZiAobWlsbGlzZWNvbmRzICE9PSAwKSB7XHJcbiAgICAgICAgdGhpcy5kdXJhdGlvbiA9IG1pbGxpc2Vjb25kcyAvIDEwMDA7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbnN0IGJpdHNMb2FkZWQgPSB0aGlzLmZpbGVTaXplICogODtcclxuXHJcbiAgICAgIHRoaXMuc3BlZWRCcHMgPSBiaXRzTG9hZGVkIC8gdGhpcy5kdXJhdGlvbjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGVuZCgpOnZvaWQge1xyXG4gICAgaWYgKCF0aGlzLmhhc0VuZGVkKSB7XHJcbiAgICAgIHRoaXMuaGFzRW5kZWQgPSB0cnVlO1xyXG5cclxuICAgICAgdGhpcy5lbmRUaW1lID0gKG5ldyBEYXRlKCkpLmdldFRpbWUoKTtcclxuXHJcbiAgICAgIHRoaXMuX3VwZGF0ZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZXJyb3IoKTp2b2lkIHtcclxuICAgIGlmICghdGhpcy5oYXNFbmRlZCkge1xyXG4gICAgICB0aGlzLmhhc0VuZGVkID0gdHJ1ZTtcclxuXHJcbiAgICAgIHRoaXMuZW5kVGltZSA9IG51bGw7XHJcblxyXG4gICAgICB0aGlzLl91cGRhdGUoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXJ0KCk6dm9pZCB7XHJcbiAgICB0aGlzLnN0YXJ0VGltZSA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==